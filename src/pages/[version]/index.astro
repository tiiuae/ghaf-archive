---
import Files from "../../layouts/Files.astro";
import { getGhafReleases, getArtifactsInRelease } from "../../lib/artifacts";
import { S3_BUCKET, S3_ENDPOINT, S3_REGION } from "../../lib/constants";
import { getDocsVersion } from "../../lib/calver";
import type { Rule } from "../../lib/calver";

export async function getStaticPaths() {
  const releases = await getGhafReleases();
  return releases.map((version) => ({
    params: { version },
  }));
}

const docsRules: Rule[] = [
  {
    range: { min: "23.09", max: "24.06" },
    version: "v1",
  },
  {
    range: { min: "24.09", max: "24.09.2" },
    version: "v2",
  },
  {
    range: { min: "24.09.3", max: null },
    version: "v3",
  },
];

const { version } = Astro.params;
const files = await getArtifactsInRelease(version);
const release = `https://${S3_REGION}.${S3_ENDPOINT}/${S3_BUCKET}/${version}`;
const docsVersion = getDocsVersion(docsRules, version.split("-")[1]);

let links = [
  {
    emoji: "üìÑ",
    label: "Release notes",
    link: `https://ghaf.tii.ae/ghaf/releases/${version.replaceAll(".", "")}`,
  },
  {
    emoji: "üè∑",
    label: "Source code",
    link: `https://github.com/tiiuae/ghaf/tree/${version}`,
  },
];

if (docsVersion !== null) {
  links.push({
    emoji: "‚úÖ",
    label: "Signature verification instructions",
    link: `/signature-verification/${docsVersion}`,
  });

  if (docsVersion === "v1") {
    links.push({
      emoji: "üîë",
      label: "themisto.pub",
      link: "/keys/themisto.pub",
    });
  }
}
---

<Files title={version}>
  <div class="flex gap-1"></div>

  <div class="border-solid border-2 rounded-md p-4">
    <h2>
      <a class="text-white opacity-60 hover:opacity-100" href="/">Releases</a>/{
        version
      }
    </h2>
    <ul class="mt-4">
      {
        links.map((link) => (
          <li class="flex gap-1">
            <span class="w-5 text-center">{link.emoji}</span>
            <a href={link.link}>{link.label}</a>
          </li>
        ))
      }
    </ul>
    <h2 class="mt-4">Artifacts</h2>
    <ul>
      {
        files.map((file) => (
          <li>
            <a href={`${release}/${file}`}>{file}</a>
          </li>
        ))
      }
    </ul>
  </div>
</Files>
